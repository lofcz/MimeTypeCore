@page "/"
@code {
    
    string? lastMimeType, error;
    bool processed, anyOk;

    async Task HandleFileChange(InputFileChangeEventArgs args)
    {
        processed = false;
        error = null;
        lastMimeType = null;
        StateHasChanged();
    
        try
        {
            await using Stream stream = args.File.OpenReadStream(long.MaxValue);
            lastMimeType = await MimeTypeMap.TryGetMimeTypeAsync(args.File.Name, stream);
            anyOk = lastMimeType is not null;
        }
        catch (Exception e) // the file size is probably over the OpenReadStream limit
        {
            error = $"{e.Message}";
        }
        
        processed = true; 
        StateHasChanged();
    }
}

<div style="margin-bottom: 6px; font-weight: 500; font-size: 1.2em;">Choose any file from your device to get its MIME type:</div>
<InputFile OnChange="HandleFileChange" style="width: 300px;" class="form-control" />

<div style="margin-top: 6px;">
    <i>Note: there is no server, nothing is uploaded.</i>
</div>

<div style="height: 1rem;"></div>

@if (error is not null)
{
    <div style="max-width: min(100%, 350px)" class="alert alert-danger" role="alert">
        <span>@error</span>
    </div>
}
else if (processed)
{
    if (lastMimeType is null)
    {
        <div style="max-width: min(100%, 350px)" class="alert alert-danger" role="alert">
            <span>MIME type not recognized.</span>
        </div>
    }
    else 
    {
        <div style="max-width: min(100%, 350px)" class="alert alert-success" role="alert">
            MIME type: <code>@lastMimeType</code>
        </div>
    }
}

<div style="margin-top: 1rem;">
    <div>
        <small>GitHub: <a href="https://github.com/lofcz/mimetypecore" target="_blank">https://github.com/lofcz/mimetypecore</a></small>
    </div>
    
    @if (anyOk)
    {
        <div>
            <small><b>⭐ Please consider starring the repository if you find it useful.</b></small>
        </div>   
    }
</div>